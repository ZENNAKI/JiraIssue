{namespace JIRA.Templates.Setup}

/**
 * Base layout used by all setup pages
 *
 * @param bodyClasses
 * @param content
 * @param? languageDialogDefaultTexts
 * @param productName
 * @param? selectedBundle
 * @param? selectedBundleName
 * param trackerSteps
 */
{template .layout}
    {call aui.page.document}
        {param extraClasses: $bodyClasses /}
        {param focusedPageSize: 'large' /}
        {param pageType: 'focused' /}
        {param windowTitle: getText('setup.title') /}
        {param content}
            {call .layoutContent}
                {param content: $content /}
            {/call}
        {/param}
        {param headContent}
            <meta name="ajs-setup-product-name" content="{$productName}"/>
            <meta name="ajs-setup-context-path" content="{contextPath()}"/>

            {if $languageDialogDefaultTexts}
                <meta name="ajs-setup-language-dialog-default-texts" content="{$languageDialogDefaultTexts}"/>
            {/if}

            {if $selectedBundle}
                <meta name="ajs-setup-chosen-bundle" content="{$selectedBundle}"/>
            {/if}

            {if $selectedBundleName}
                <meta name="ajs-setup-chosen-bundle-name" content="{$selectedBundleName}"/>
            {/if}
        {/param}
    {/call}
{/template}

/**
 * The content of the setup page document.
 *
 * @param content content of page panel
 */
{template .layoutContent}
//    {call aui.page.pageHeader}
//        {param content}
//            {call aui.page.pageHeaderMain}
//                {param content}
//                    <h1>{getText('setup.page.header', $productName)}</h1>
//                {/param}
//            {/call}
//            {call aui.page.pageHeaderActions}
//                {param content}
//                    {call aui.progressTracker.progressTracker}
//                        {param steps: $trackerSteps /}
//                    {/call}
//                {/param}
//            {/call}
//        {/param}
//    {/call}
    {call aui.page.pagePanel}
        {param extraClasses: 'margin-fix' /}
        {param content}
            {call aui.page.pagePanelContent}
                {param content}
                    {$content|noAutoescape}
                    <section role="dialog" id="jira-setup-language-dialog" data-aui-modal="true"
                        {sp}class="aui-layer aui-dialog2 aui-dialog2-medium" aria-hidden="true"></section>
                {/param}
            {/call}
        {/param}
    {/call}
{/template}

/**
 * Widget used to choose one from few options
 *
 * @param? default value of choice selected by default
 * @param name a name of the hidden field which value will be sent together with form
 * @param options a list of objects like [headerContent, headerLozengeText, descriptionContent, value, leftContent?, rightContent?, extraClasses?]
 */
{template .choiceWidget}
    {foreach $option in $options}
        <div class="jira-setup-choice-box{if $option.extraClasses} {$option.extraClasses}{/if}" data-choice-value="{$option.value}">
            {if $option.leftContent}
                <div class="jira-setup-choice-cell jira-setup-choice-left">
                    {$option.leftContent|noAutoescape}
                </div>
            {/if}
            <div class="jira-setup-choice-cell jira-setup-choice-center">
                <h2 class="jira-setup-choice-box-header">{$option.headerContent|noAutoescape}
                    {if $option.headerLozengeText}
                        {sp}<span class="aui-lozenge aui-lozenge-subtle">{$option.headerLozengeText}</span>
                    {/if}
                </h2>
                <p class="jira-setup-choice-box-description">{$option.descriptionContent|noAutoescape}</p>
            </div>
            {if $option.rightContent}
                <div class="jira-setup-choice-cell jira-setup-choice-right">
                    {$option.rightContent|noAutoescape}
                </div>
            {/if}
        </div>
    {/foreach}

    <input type="hidden" name="{$name}" id="jira-setup-choice-value" value="{if $default}{$default}{/if}">
{/template}

/**
 * A template rendering link triggering language dialog
 */
{template .languageDialogTrigger}
    {call aui.buttons.button}
        {param id: 'jira-setup-language-dialog-trigger'/}
        {param extraClasses: 'aui-button-subtle jira-setup-language-dialog-trigger'/}
        {param text: getText('setup.language.dialog.trigger')/}
        {param tagName: 'A'/}
        {param iconType: 'custom'/}
        {param iconText: getText('setup.language.dialog.trigger')/}
        {param iconClass: 'aui-icon aui-icon-small aui-iconfont-weblink'/}
    {/call}
{/template}

/**
 * Content of modal dialog used to change language
 *
 * @param? locales a list of available locales, required if showSpinner is set to true
 * @param showConnectionWarning whether to show a warning about problem with communication
 * @param showSpinner whether to show just a spinner instead of regular content, defaults to false
 * @param texts texts to be used inside dialog
 */
{template .languageDialogContent}
    <header class="aui-dialog2-header">
        <h2 class="aui-dialog2-header-main">{$texts.header}</h2>
    </header>
    <div class="aui-dialog2-content">
        {if $showSpinner}
            <span class="aui-icon aui-icon-wait jira-setup-language-spinner"></span>
        {else}
            {if $showConnectionWarning}
                {call aui.message.warning}
                    {param content}{$texts.connectionWarningContent}{/param}
                    {param extraClasses: 'jira-setup-language-connection-warning' /}
                    {param titleContent}{$texts.connectionWarningTitle}{/param}
                {/call}
            {/if}
            {if not $showConnectionWarning}
                {call aui.form.form}
                    {param action: '' /}
                    {param extraClasses: 'ajs-dirty-warning-exempt' /}
                    {param id: 'jira-setup-language-form' /}
                    {param content}
                        {call aui.form.selectField}
                            {param descriptionText: $texts.langDesc /}
                            {param fieldWidth: 'large' /}
                            {param id: 'jira-setup-language' /}
                            {param labelContent}{$texts.langLabel}{/param}
                            {param name: 'serverLanguage' /}
                            {param options: $locales /}
                        {/call}
                    {/param}
                {/call}
            {/if}
        {/if}
    </div>
    <footer class="aui-dialog2-footer">
        <div class="aui-dialog2-footer-actions">
            <span class="aui-icon aui-icon-wait jira-setup-language-footer-spinner hidden"></span>
            {sp}
            <button class="aui-button aui-button-primary jira-setup-language-save-button"
            {if $showSpinner or $showConnectionWarning}{sp}aria-disabled="true" disabled="disabled"{/if}
            >{$texts.button}</button>
            {sp}
            <button class="aui-button aui-button-link jira-setup-language-cancel-button">{$texts.cancel}</button>
        </div>
    </footer>
{/template}

/**
 * Get error account verification message.
 * This is workaournd as AJS.i18n is not working in setup mode
 */
{template .accountNeedsVerificationMessage}
{getText('setup.aid.login.email.needs.verification.line1')}<br>{getText('setup.aid.login.email.needs.verification.line2')}
{/template}

/**
 * Get accouny blocked message.
 * This is workaournd as AJS.i18n is not working in setup mode
 */
{template .accountBlockedMessage}
{getText('setup.aid.login.account.blocked')}
{/template}

/**
 * Get accouny blocked message.
 * This is workaournd as AJS.i18n is not working in setup mode
 */
{template .credentialsIncorrect}
{getText('setup.aid.login.problem')}
{/template}

/**
 * Get a generic "cannot log in" message.
 * This is workaournd as AJS.i18n is not working in setup mode
 */
{template .genericLoginError}
    {let $linkEnd}</a>{/let}
    {let $linkMac}<a href="https://my.atlassian.com/" target="_blank">{/let}
    {let $linkSetup}<a href="{contextPath()}/secure/SetupMode!default.jspa">{/let}

    {getText('setup.account.logging.problem.error.content', $linkMac, $linkEnd, $linkSetup, $linkEnd)|noAutoescape}
{/template}