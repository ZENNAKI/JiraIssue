JIRA.ProjectIssueTypeSelect=Class.extend({init:function(options){var val,instance=this;this.$project=options.project;this.issueTypeSelect=options.issueTypeSelect;this.$projectIssueTypesSchemes=options.projectIssueTypesSchemes;this.$issueTypeSchemeIssueDefaults=options.issueTypeSchemeIssueDefaults;this.projectIssueTypeSchemes=JSON.parse(this.$projectIssueTypesSchemes.html());this.issueTypesSchemeDefaults=JSON.parse(this.$issueTypeSchemeIssueDefaults.html()||"[]");if(instance.$project.length>0){val=instance.$project.val();instance.setIssueTypeScheme(instance.getIssueTypeSchemeForProject(val));this.$project.change(function(){var val=instance.$project.val();instance.setIssueTypeScheme(instance.getIssueTypeSchemeForProject(val))})}},getIssueTypeSchemeForProject:function(projectId){return this.projectIssueTypeSchemes[projectId]},getDefaultIssueTypeForScheme:function(issueTypeSchemeId){return this.issueTypesSchemeDefaults[issueTypeSchemeId]},setIssueTypeScheme:function(issueTypeSchemeId){var selectedIssueType=this.issueTypeSelect.model.getValue();this.issueTypeSelect.model.setFilterGroup(issueTypeSchemeId);if(!this.issueTypeSelect.model.setSelected(selectedIssueType,false)){this.setDefaultIssueType(issueTypeSchemeId)}this.issueTypeSelect.model.$element.data("project",this.$project.val())},setDefaultIssueType:function(issueTypeSchemeId){var defaultIssueType=this.getDefaultIssueTypeForScheme(issueTypeSchemeId),descriptor=this.issueTypeSelect.model.getDescriptor(defaultIssueType);if(!descriptor){descriptor=this.issueTypeSelect.model.getAllDescriptors()[0]}this.issueTypeSelect.setSelection(descriptor,false)}});